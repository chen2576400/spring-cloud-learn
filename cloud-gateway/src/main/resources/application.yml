server:
  port: 8082 #配置服务端口


spring:
  application:
    name: cms-cloud-gateway  #服务名称 - 服务之间使用名称进行通讯
  cloud:         # spring cloud gateway 路由配置方式
    gateway:
      discovery:   #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。#默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
        locator:  #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**， #其中微服务应用名默认大写访问。
          enabled: true  #开启自动路由,以服务id建立路由，服务id默认大写
          lower-case-service-id: true   # 允许为小写
      routes:
        - id: microservice-base            #设置路由id
          uri: lb://microservice-base/     #设置路由的uri
          predicates:                        #设置路由断言,代理servicerId为auth-service的/auth/路径
            - Path= /microservice-base/**
        - id: microservice-job
          uri: lb://microservice-job/
          predicates:
            - Path= /microservice-job/**

  #原来调用  http://localhost:8083/job/feginByfindAllUser
  #加入网关后 http://localhost:8082/microservice-base/job/feginByfindAllUser








eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8081/eureka #填写注册中心服务器地址
    register-with-eureka: true  #是否需要将自己注册到注册中心
    fetch-registry: true  #是否需要搜索服务信息
  instance:
    prefer-ip-address: true #使用ip地址注册到注册中心
    instance-id: ${spring.cloud.client.ip-address}:${server.port} #注册中心列表中显示的状态参数

